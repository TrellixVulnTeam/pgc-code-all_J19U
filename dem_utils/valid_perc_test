import os

import pandas as pd
import geopandas as gpd

# from valid_data import valid_percent
import dem_utils.valid_data_percent
from misc_utils.logging_utils import create_logger

logger = create_logger(__name__, 'sh', 'INFO')

def get_bitmask_path(dem_path):
    bm_p = os.path.join(
        os.path.dirname(dem_path),
        os.path.basename(dem_path).replace('dem', 'bitmask')
    )

    return bm_p


fields = {
    'DEMS_GEOM': 'wkb_geometry',  # Sandwich DEMs geometry name
    # Used only for writing catalogids to text file if requested
    'CATALOGID1': 'catalogid1',  # field name in danco DEM footprint for catalogids
    'CATALOGID2': 'catalogid2',
    'PAIRNAME': 'pairname',
    'FULLPATH': 'LOCATION',  # field name in footprint with path to dem file
    'BITMASK': 'bitmask',  # created field name in footprint to hold path to bitmask
    'DATE_COL': 'acqdate1',  # name of date field in dems footprint
    'DENSITY_COL': 'density',  # name of density field in dems footprint
    'SENSOR_COL': 'sensor1',  # name of sensor field in dems footprint
    'RES_COL': 'dem_res',
}

VALID_PERC = 'valid_perc'

dems_p = r'V:\pgc\data\scratch\jeff\projects\nasa_planet_geoloc\kamchatka\dem_strips_2m.shp'
dems = gpd.read_file(dems_p)

logger.info('Determining percent of non-NoData pixels over AOI for each DEM...')
dems[fields['BITMASK']] = dems[fields['FULLPATH']].apply(lambda x: get_bitmask_path(x))

dems[VALID_PERC] = -9999.0
for row in tqdm(dems[[fields['FULLPATH'], VALID_PERC]].itertuples(index=True),
                total=len(dems)):
    vp = valid_data_percent(gdal_ds=)
    # vp = valid_percent_clip(AOI_PATH, row[1]) # Index is row[0], then passed columns
    dems.at[row.Index, VALID_PERC] = vp